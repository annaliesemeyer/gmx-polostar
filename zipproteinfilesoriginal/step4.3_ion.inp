* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) v3.4 on Apr, 27. 2021. JOBID=1954209663
* GENERATES ION CONFORMATION USING MONTE-CARLO SIMULATION
*

DIMENS CHSIZE 5000000 MAXRES 3000000

! Read topology and parameter files
stream toppar.str

! Read PSF and Coordinates
open read unit 10 card name step1_pdbreader.psf
read psf  unit 10 card

open read unit 10 card name step2_orient.crd
read coor unit 10 card

define PROT sele all end

!Read the system information
stream step3_size.str
stream step4_components.str
if isglip .eq. YES stream step3_glipid.str

! Read Lipids
open read unit 10 card name step4_lipid_lipid.psf
read psf  unit 10 card append

open read unit 10 card name step4_lipid_lipid.crd
read coor unit 10 card append

! Write coordinates
open write unit 10 card name step4.3_ion_protmemb.crd
write coor unit 10 card

calc ncharge = int( ?cgtot )

!
! Concentration, Volume, and Number of Ions
!

set conc  =  0.15        ! M
set zmemb =  20.0           ! ion exclusion membrane region
set posval = 1
set negval = 1

! protein volume, calculation with a grid spacing of 0.5
coor stat

calc dcel = 0.5
calc xdim = int ( ( ?xmax - ?xmin + 5.0 ) / @dcel ) + 1
calc ydim = int ( ( ?ymax - ?ymin + 5.0 ) / @dcel ) + 1
calc zdim = int ( ( ?zmax - ?zmin + 5.0 ) / @dcel ) + 1
calc space = @xdim * @ydim * @zdim

scalar wmain = radius
scalar wmain add 1.4    ! use solvent accessible surface for molecular volume
scalar 1 = wmain
scalar 2 set 6.0
coor volume hole space @space sele .not. resname TIP3 end

set sysvol = ?volume

IF BOXTYPE .ne. HEXA then
   calc volumn = ( @A * @B * @C ) - @sysvol
ENDIF

IF BOXTYPE .eq. HEXA THEN
   calc A = @A / cos ( 30.0 * ?pi / 180.0 )
   calc B = @B / cos ( 30.0 * ?pi / 180.0 )
   calc C = @C
   calc volumn = ( 3 / 8 * sqrt(3) * @A * @B * @C ) - @sysvol
ENDIF

calc npos = 0
calc nneg = 0
if ncharge .lt. 0 calc npos = int( abs( ?cgtot ) / @posval )
if ncharge .gt. 0 calc nneg = int( abs( ?cgtot ) / @negval )

calc diff   = int ( ?cgtot + @npos*@posval - @nneg*@negval )
label neutral
   if diff .gt. 0 calc nneg = @nneg + 1
   if diff .lt. 0 calc npos = @npos + 1
   calc diff   = int ( ?cgtot + @npos*@posval - @nneg*@negval )
if diff .ne. 0 goto neutral

if npos .lt. 0 stop ! something wrong
if nneg .lt. 0 stop ! something wrong

!
! Randomly place the ions
!

! Generate POT
if npos .gt. 0 then
   read sequence POT @npos
   generate POT warn
endif

! Generate CLA
if nneg .gt. 0 then
   read sequence CLA @nneg
   generate CLA warn
endif

calc nion = @npos + @nneg
if nion .eq. 0 goto continue

! initial positions for all ions
coor set xdir 0.0 ydir 0.0 zdir 0.0 select segid POT .or. segid CLA end

!
!Images Setup [to place all atoms inside the box]
!

open read unit 10 card name crystal_image.str
CRYSTAL DEFINE @XTLtype @A @B @C @alpha @beta @gamma
CRYSTAL READ UNIT 10 CARD

!Image centering by residue
IMAGE BYATOM XCEN 0.0 YCEN 0.0 ZCEN @zcen

nbonds atom switch vatom vswitch -
       ctonnb 10.0 ctofnb 12.0 cutnb 15.0 cutim 15.0 -
       inbfrq -1 imgfrq -1 wmin 1.0 cdie eps 80.0
ENERGY

CONS FIX SELE .NOT. ( SEGID POT .OR. SEGID CLA ) END
SKIP ALL EXCL VDW ELEC
scalar wmain = charge

!
! Initial placement of ions
!

calc cntrand = 0

calc i   = 1
label doinit

    calc cntrand = @cntrand + 1
    if cntrand .gt. 100 stop ! ion placing may not work.. stop here

    calc j = @i
    set ion = POT

    if j .gt. @npos then
       set ion = CLA
       calc j  = @j - @npos
    endif

    define target select segid @ion .and. resid @j end

    calc xpos = @A * ( ?random - 0.5 )
    calc ypos = @B * ( ?random - 0.5 )
    calc zpos = @C * ( ?random - 0.5 ) + @zcen

    if zpos .gt. -15 if zpos .lt. 15 goto doinit

    coor set xdir @xpos  ydir @ypos  zdir @zpos select target end

    calc dcut = 5.0
    calc xmax = @xpos + @dcut
    calc ymax = @ypos + @dcut
    calc zmax = @zpos + @dcut
    calc xmin = @xpos - @dcut
    calc ymin = @ypos - @dcut
    calc zmin = @zpos - @dcut

    define JUNK sele .not. target .and. -
                     prop X .lt. @xmax .and. prop X .gt. @xmin .and. -
                     prop Y .lt. @ymax .and. prop Y .gt. @ymin .and. -
                     prop Z .lt. @zmax .and. prop Z .gt. @zmin  end

    ! check if the ions are too close to protein
    define XXX sele PROT end
    if ?nsel .gt. 0 then
        coor dist cut 10.0 sele target end -
                           sele PROT .and. JUNK .and. .not. hydrogen end
        if ?npair .gt. 0 goto doinit
    endif

    ! check if the ions are too close to solute
    coor dist cut 4.0 sele target end sele JUNK .and. .not. hydrogen end
    if ?npair .gt. 0 goto doinit

calc cntrand = 0
increase i by 1
if i .le. @nion goto doinit

CRYSTAL FREE

open read unit 10 card name step4.3_ion_protmemb.crd
read coor unit 10 card

open write unit 10 card name step4.3_ion.pdb
write coor unit 10 pdb
close unit 10

delete atom sele .not. ( segid POT .or. segid CLA ) end

open write unit 10 card name step4.3_pos.crd
write coor unit 10 card sele segid POT end
close unit 10

if npos .gt. 0 delete atom sele segid POT end

open write unit 10 card name step4.3_neg.crd
write coor unit 10 card sele segid CLA end
close unit 10

label continue

open write unit 10 card name step4.3_ion.str
write title unit 10
* set npos = @npos ! Number of positive ions
* set nneg = @nneg ! Number of negative ions
* set posid = POT
* set negid = CLA
*

stop
